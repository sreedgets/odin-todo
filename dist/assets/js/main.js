(()=>{"use strict";const e=e=>{let t,n=e,c=[];return{getName:function(){return n},setName:function(e){n=e},getPosition:function(){return t},setPosition:function(e){t=e},getTasks:function(){return c}}},t=(()=>{let t=[];return{getProjects:function(){return t},saveProjects:function(n){const c=e(n);t.push(c),console.log(t[t.length-1].getPosition())},deleteProject:function(){console.log("cwosant")}}})(),n=function(){const n=document.querySelector(".add-project");n.style.display="none";const c=document.querySelector(".projects");let o=document.createElement("div");o.className="project-create";let l=document.createElement("input");const r=document.createElement("button");r.className="ok",r.innerText="Ok",r.addEventListener("click",(()=>{const c=l.value;c?(o.remove(),n.style.display="block",t.saveProjects(c),function(t){const n=document.querySelector(".projects"),c=e(t),o=document.createElement("div");o.className="project-container";const l=document.createElement("h2");l.innerText=c.getName();const r=document.createElement("button");r.className="delete-project",r.innerText="X",l.appendChild(r),o.appendChild(l),n.appendChild(o)}(c)):console.log("need a title")}));const s=document.createElement("button");s.className="cancel",s.innerText="Cancel",s.addEventListener("click",(()=>{o.remove(),n.style.display="block"})),o.appendChild(l),o.appendChild(r),o.appendChild(s),c.appendChild(o)},c=function(){document.querySelector(".add-project").addEventListener("click",(()=>{n()}))};document.addEventListener("DOMContentLoaded",(()=>{c()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,